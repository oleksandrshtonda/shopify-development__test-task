{{ 'collection.css' | asset_url | stylesheet_tag }}
{{ 'product.css' | asset_url | stylesheet_tag }}

<section class="featured-products">
  <h1 class="featured-products__label">
    Featured Products
  </h1>

  {% assign cart_item_ids = cart.items | map: 'product_id' %}

  <div class="featured-products__products products">
    {% for product in products %}
      {% unless cart_item_ids contains product.id %}
        <article class="products__product product">
          <img
            class="product__image"
            src="{{ product.featured_image | image_url }}"
            alt="{{ product.featured_image.alt | escape }}"
          >

          <div class="product__info">
            <h2 class="product__title">
              {{ product.title }}
            </h2>

            {% form 'product', product, class: 'product-form' %}
              <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

              <button class="product__add-to-cart-btn" type="submit">
                Add to cart - {{ product.price | money_without_trailing_zeros }}
              </button>
            {% endform %}
          </div>
        </article>
      {% endunless %}
    {% endfor %}
  </div>

  <script>
    let productIdsInCart;

    const getAllProducts = () => {
      const COLLECTION_ID = '613242569029';
      const TOKEN = '6cb45da0e17f79006b1c289f35348e1f';
      const SHOP_NAME = '40a5e6-4';

      const url = `https://${SHOP_NAME}.myshopify.com/admin/api/2021-04/products.json?collection_id=${COLLECTION_ID}`;

      fetch(url, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'X-Shopify-Access-Token': TOKEN,
        },
      })
        .then(response => response.json())
        .then(data => {
          const products = data.products;
          console.log(products);
        })
        .catch(error => console.error('Error:', error));
    }

    getAllProducts()

    document.addEventListener('DOMContentLoaded', function() {
      const addToCartForms = document.querySelectorAll('.product-form');

      addToCartForms.forEach(function(form) {
        form.addEventListener('submit', function(event) {
          event.preventDefault();
          const formData = new FormData(form);

          fetch(form.action, {
            method: 'POST',
            body: formData
          })
          .then(data => {
            console.log('Товар доданий у кошик:', data);
          })
          .catch(error => {
            console.error('Помилка при додаванні товару у кошик:', error);
          });
        });
      });
    });

    document.addEventListener('DOMContentLoaded', () => {
      const updateProductsBtns = document.querySelectorAll('.product__add-to-cart-btn');
      const productsElem = document.querySelector('.products');

      const updateMarkupForProducts = productsIds => {

      }

      const callback = () => {
        fetch('cart.js')
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json()
          })
          .then(data => {
            productsElem.innerHTML = data;
            
            productIdsInCart = data.items.map(product => product.id)

            console.log(data)
            console.log(productIdsInCart)
          })
          .catch(error => {
            console.error('error:', error);
          });
      }

      updateProductsBtns.forEach(updateProductsBtn => {
        updateProductsBtn.addEventListener('click', () => {
          setTimeout(callback, 200);
        });
      })
    });
  </script>

</section>

