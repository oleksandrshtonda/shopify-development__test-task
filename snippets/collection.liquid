{{ 'collection.css' | asset_url | stylesheet_tag }}
{{ 'product.css' | asset_url | stylesheet_tag }}

<section class="featured-products">
  <h1 class="featured-products__label">
    Featured Products
  </h1>

  {% assign cart_item_ids = cart.items | map: 'product_id' %}

  <div class="featured-products__products products">
    {% for product in products %}
      {% unless cart_item_ids contains product.id %}
        <article class="products__product product">
          <img
            class="product__image"
            src="{{ product.featured_image | image_url }}"
            alt="{{ product.featured_image.alt | escape }}"
          >

          <div class="product__info">
            <h2 class="product__title">
              {{ product.title }}
            </h2>

            {% form 'product', product, class: 'product-form' %}
              <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

              <button class="product__add-to-cart-btn" type="submit">
                Add to cart - {{ product.price | money_without_trailing_zeros }}
              </button>
            {% endform %}
          </div>
        </article>
      {% endunless %}
    {% endfor %}
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const addToCartForms = document.querySelectorAll('.product-form');

      addToCartForms.forEach(function(form) {
        form.addEventListener('submit', function(event) {
          event.preventDefault();
          const formData = new FormData(form);

          fetch(form.action, {
            method: 'POST',
            body: formData
          })
          .then(data => {
            console.log('Товар доданий у кошик:', data);
          })
          .catch(error => {
            console.error('Помилка при додаванні товару у кошик:', error);
          });
        });
      });
    });

    document.addEventListener('DOMContentLoaded', () => {
    const updateProductsBtns = document.querySelectorAll('.product__add-to-cart-btn');

    updateProductsBtns.forEach(updateProductsBtn => {
      updateProductsBtn.addEventListener('click', () => {
      fetch('/your-endpoint-for-updating-products')
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.text();
        })
        .then(data => {
          document.querySelector('.products').innerHTML = data;
          
          console.log(data)
        })
        .catch(error => {
          console.error('error:', error);
        });
    });
    })
  });
  </script>

</section>

